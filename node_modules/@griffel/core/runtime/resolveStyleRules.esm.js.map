{"version":3,"file":"resolveStyleRules.esm.js","sources":["../../../../packages/core/src/runtime/resolveStyleRules.ts"],"sourcesContent":["import hashString from '@emotion/hash';\nimport type { GriffelAnimation, GriffelStyle } from '@griffel/style-types';\nimport { convert, convertProperty } from 'rtl-css-js/core';\n\nimport { HASH_PREFIX, RESET, UNSUPPORTED_CSS_PROPERTIES } from '../constants';\nimport type { CSSClassesMap, CSSRulesByBucket, StyleBucketName, CSSBucketEntry } from '../types';\nimport type { CompileAtomicCSSOptions } from './compileAtomicCSSRule';\nimport { compileAtomicCSSRule } from './compileAtomicCSSRule';\nimport { compileKeyframeRule, compileKeyframesCSS } from './compileKeyframeCSS';\nimport { shorthands } from './shorthands';\nimport { generateCombinedQuery } from './utils/generateCombinedMediaQuery';\nimport { isMediaQuerySelector } from './utils/isMediaQuerySelector';\nimport { isLayerSelector } from './utils/isLayerSelector';\nimport { isNestedSelector } from './utils/isNestedSelector';\nimport { isSupportQuerySelector } from './utils/isSupportQuerySelector';\nimport { isContainerQuerySelector } from './utils/isContainerQuerySelector';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { isObject } from './utils/isObject';\nimport { getStyleBucketName } from './getStyleBucketName';\nimport { hashClassName } from './utils/hashClassName';\nimport { hashPropertyKey } from './utils/hashPropertyKey';\nimport { isResetValue } from './utils/isResetValue';\nimport { trimSelector } from './utils/trimSelector';\nimport type { AtRules } from './utils/types';\nimport { warnAboutUnresolvedRule } from './warnings/warnAboutUnresolvedRule';\nimport { warnAboutUnsupportedProperties } from './warnings/warnAboutUnsupportedProperties';\n\nfunction getShorthandDefinition(property: string): [number, string[]] | undefined {\n  return shorthands[property as keyof typeof shorthands];\n}\n\nfunction computePropertyPriority(shorthand: [number, string[]] | undefined): number {\n  return shorthand?.[0] ?? 0;\n}\n\nfunction pushToClassesMap(\n  classesMap: CSSClassesMap,\n  propertyKey: string,\n  ltrClassname: string | 0,\n  rtlClassname: string | undefined,\n) {\n  classesMap[propertyKey] = rtlClassname ? [ltrClassname as string, rtlClassname] : ltrClassname;\n}\n\nfunction createBucketEntry(cssRule: string, metadata: [string, unknown][]): CSSBucketEntry {\n  if (metadata.length > 0) {\n    return [cssRule, Object.fromEntries(metadata)];\n  }\n\n  return cssRule;\n}\n\nfunction pushToCSSRules(\n  cssRulesByBucket: CSSRulesByBucket,\n  styleBucketName: StyleBucketName,\n  ltrCSS: string | undefined,\n  rtlCSS: string | undefined,\n  media: string | undefined,\n  priority: number,\n) {\n  const metadata: [string, unknown][] = [];\n\n  if (priority !== 0) {\n    metadata.push(['p', priority]);\n  }\n\n  if (styleBucketName === 'm' && media) {\n    metadata.push(['m', media]);\n  }\n\n  cssRulesByBucket[styleBucketName] ??= [];\n\n  if (ltrCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(ltrCSS, metadata));\n  }\n\n  if (rtlCSS) {\n    cssRulesByBucket[styleBucketName]!.push(createBucketEntry(rtlCSS, metadata));\n  }\n}\n\n/**\n * Transforms input styles to classes maps & CSS rules.\n *\n * @internal\n */\nexport function resolveStyleRules(\n  styles: GriffelStyle,\n  classNameHashSalt: string = '',\n  selectors: string[] = [],\n  atRules: AtRules = {\n    container: '',\n    layer: '',\n    media: '',\n    supports: '',\n  },\n  cssClassesMap: CSSClassesMap = {},\n  cssRulesByBucket: CSSRulesByBucket = {},\n  rtlValue?: string,\n): [CSSClassesMap, CSSRulesByBucket] {\n  // eslint-disable-next-line guard-for-in\n  for (const property in styles) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (UNSUPPORTED_CSS_PROPERTIES.hasOwnProperty(property)) {\n      warnAboutUnsupportedProperties(property, styles[property as keyof GriffelStyle]);\n      continue;\n    }\n\n    const value = styles[property as keyof GriffelStyle];\n\n    // eslint-disable-next-line eqeqeq\n    if (value == null) {\n      continue;\n    }\n\n    if (isResetValue(value)) {\n      const selector = trimSelector(selectors.join(''));\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, property, atRules);\n\n      pushToClassesMap(cssClassesMap, key, 0, undefined);\n      continue;\n    }\n\n    if (typeof value === 'string' || typeof value === 'number') {\n      const selector = trimSelector(selectors.join(''));\n      const shorthand = getShorthandDefinition(property);\n\n      if (shorthand) {\n        const shorthandProperties = shorthand[1];\n        const shorthandResetStyles = Object.fromEntries(shorthandProperties.map(property => [property, RESET]));\n\n        resolveStyleRules(shorthandResetStyles, classNameHashSalt, selectors, atRules, cssClassesMap, cssRulesByBucket);\n      }\n\n      // uniq key based on a hash of property & selector, used for merging later\n      const key = hashPropertyKey(selector, property, atRules);\n      const className = hashClassName(\n        {\n          value: value.toString(),\n          salt: classNameHashSalt,\n          selector,\n          property,\n        },\n        atRules,\n      );\n\n      const rtlDefinition = (rtlValue && { key: property, value: rtlValue }) || convertProperty(property, value);\n      const flippedInRtl = rtlDefinition.key !== property || rtlDefinition.value !== value;\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName(\n            {\n              value: rtlDefinition.value.toString(),\n              property: rtlDefinition.key,\n              salt: classNameHashSalt,\n              selector,\n            },\n            atRules,\n          )\n        : undefined;\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinition.key,\n            rtlValue: rtlDefinition.value,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, atRules);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule(\n        {\n          className,\n          selectors,\n          property,\n          value,\n          ...rtlCompileOptions,\n        },\n        atRules,\n      );\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(\n        cssRulesByBucket,\n        styleBucketName,\n        ltrCSS,\n        rtlCSS,\n        atRules.media,\n        computePropertyPriority(shorthand),\n      );\n    } else if (property === 'animationName') {\n      const animationNameValue = Array.isArray(value) ? (value as GriffelAnimation[]) : [value as GriffelAnimation];\n\n      const animationNames: string[] = [];\n      const rtlAnimationNames: string[] = [];\n\n      for (const keyframeObject of animationNameValue) {\n        const keyframeCSS = compileKeyframeRule(keyframeObject);\n        const rtlKeyframeCSS = compileKeyframeRule(convert(keyframeObject));\n\n        const animationName = HASH_PREFIX + hashString(keyframeCSS);\n        let rtlAnimationName: string;\n\n        const keyframeRules = compileKeyframesCSS(animationName, keyframeCSS);\n        let rtlKeyframeRules: string[] = [];\n\n        if (keyframeCSS === rtlKeyframeCSS) {\n          // If CSS for LTR & RTL are same we will re-use animationName from LTR to avoid duplication of rules in output\n          rtlAnimationName = animationName;\n        } else {\n          rtlAnimationName = HASH_PREFIX + hashString(rtlKeyframeCSS);\n          rtlKeyframeRules = compileKeyframesCSS(rtlAnimationName, rtlKeyframeCSS);\n        }\n\n        for (let i = 0; i < keyframeRules.length; i++) {\n          pushToCSSRules(\n            cssRulesByBucket,\n            // keyframes styles should be inserted into own bucket\n            'k',\n            keyframeRules[i],\n            rtlKeyframeRules[i],\n            atRules.media,\n            // keyframes always have default priority\n            0,\n          );\n        }\n\n        animationNames.push(animationName);\n        rtlAnimationNames.push(rtlAnimationName);\n      }\n\n      resolveStyleRules(\n        { animationName: animationNames.join(', ') },\n        classNameHashSalt,\n        selectors,\n        atRules,\n        cssClassesMap,\n        cssRulesByBucket,\n        rtlAnimationNames.join(', '),\n      );\n    } else if (Array.isArray(value)) {\n      // not animationName property but array in the value => fallback values\n      if (value.length === 0) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            `makeStyles(): An empty array was passed as input to \"${property}\", the property will be omitted in the styles.`,\n          );\n        }\n        continue;\n      }\n\n      const selector = trimSelector(selectors.join(''));\n      const shorthand = getShorthandDefinition(property);\n\n      if (shorthand) {\n        const shorthandProperties = shorthand[1];\n        const shorthandResetStyles = Object.fromEntries(shorthandProperties.map(property => [property, RESET]));\n\n        resolveStyleRules(shorthandResetStyles, classNameHashSalt, selectors, atRules, cssClassesMap, cssRulesByBucket);\n      }\n\n      const key = hashPropertyKey(selector, property, atRules);\n      const className = hashClassName(\n        {\n          value: value.map(v => (v ?? '').toString()).join(';'),\n          salt: classNameHashSalt,\n          selector,\n          property,\n        },\n        atRules,\n      );\n\n      const rtlDefinitions = value.map(v => convertProperty(property, v!));\n      const rtlPropertyConsistent = !rtlDefinitions.some(v => v.key !== rtlDefinitions[0].key);\n\n      if (!rtlPropertyConsistent) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            'makeStyles(): mixing CSS fallback values which result in multiple CSS properties in RTL is not supported.',\n          );\n        }\n        continue;\n      }\n\n      const flippedInRtl = rtlDefinitions[0].key !== property || rtlDefinitions.some((v, i) => v.value !== value[i]);\n\n      const rtlClassName = flippedInRtl\n        ? hashClassName(\n            {\n              value: rtlDefinitions.map(v => (v?.value ?? '').toString()).join(';'),\n              salt: classNameHashSalt,\n              property: rtlDefinitions[0].key,\n              selector,\n            },\n            atRules,\n          )\n        : undefined;\n\n      const rtlCompileOptions: Partial<CompileAtomicCSSOptions> | undefined = flippedInRtl\n        ? {\n            rtlClassName,\n            rtlProperty: rtlDefinitions[0].key,\n            rtlValue: rtlDefinitions.map(d => d.value) as unknown as Array<string | number>,\n          }\n        : undefined;\n\n      const styleBucketName = getStyleBucketName(selectors, atRules);\n      const [ltrCSS, rtlCSS] = compileAtomicCSSRule(\n        {\n          className,\n          selectors,\n          property,\n          value: value as unknown as Array<string | number>,\n          ...rtlCompileOptions,\n        },\n        atRules,\n      );\n\n      pushToClassesMap(cssClassesMap, key, className, rtlClassName);\n      pushToCSSRules(\n        cssRulesByBucket,\n        styleBucketName,\n        ltrCSS,\n        rtlCSS,\n        atRules.media,\n        computePropertyPriority(shorthand),\n      );\n    } else if (isObject(value)) {\n      if (isNestedSelector(property)) {\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors.concat(normalizeNestedProperty(property)),\n          atRules,\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isMediaQuerySelector(property)) {\n        const combinedMediaQuery = generateCombinedQuery(atRules.media, property.slice(6).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, media: combinedMediaQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isLayerSelector(property)) {\n        const combinedLayerQuery = (atRules.layer ? `${atRules.layer}.` : '') + property.slice(6).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, layer: combinedLayerQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isSupportQuerySelector(property)) {\n        const combinedSupportQuery = generateCombinedQuery(atRules.supports, property.slice(9).trim());\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, supports: combinedSupportQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else if (isContainerQuerySelector(property)) {\n        // TODO implement nested container queries if needed\n        // The only way to target multiple containers is to nest container queries\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/@container#nested_container_queries\n        const containerQuery = property.slice(10).trim();\n\n        resolveStyleRules(\n          value as GriffelStyle,\n          classNameHashSalt,\n          selectors,\n          { ...atRules, container: containerQuery },\n          cssClassesMap,\n          cssRulesByBucket,\n        );\n      } else {\n        warnAboutUnresolvedRule(property, value);\n      }\n    }\n  }\n\n  return [cssClassesMap, cssRulesByBucket];\n}\n"],"names":["getShorthandDefinition","property","shorthands","computePropertyPriority","shorthand","_shorthand$","pushToClassesMap","classesMap","propertyKey","ltrClassname","rtlClassname","createBucketEntry","cssRule","metadata","length","Object","fromEntries","pushToCSSRules","cssRulesByBucket","styleBucketName","ltrCSS","rtlCSS","media","priority","_cssRulesByBucket$sty","push","resolveStyleRules","styles","classNameHashSalt","selectors","atRules","container","layer","supports","cssClassesMap","rtlValue","UNSUPPORTED_CSS_PROPERTIES","hasOwnProperty","warnAboutUnsupportedProperties","value","isResetValue","selector","trimSelector","join","key","hashPropertyKey","undefined","shorthandProperties","shorthandResetStyles","map","RESET","className","hashClassName","toString","salt","rtlDefinition","convertProperty","flippedInRtl","rtlClassName","rtlCompileOptions","rtlProperty","getStyleBucketName","compileAtomicCSSRule","assign","animationNameValue","Array","isArray","animationNames","rtlAnimationNames","keyframeObject","keyframeCSS","compileKeyframeRule","rtlKeyframeCSS","convert","animationName","HASH_PREFIX","hashString","rtlAnimationName","keyframeRules","compileKeyframesCSS","rtlKeyframeRules","i","process","env","NODE_ENV","console","warn","v","rtlDefinitions","rtlPropertyConsistent","some","error","_v$value","d","isObject","isNestedSelector","concat","normalizeNestedProperty","isMediaQuerySelector","combinedMediaQuery","generateCombinedQuery","slice","trim","isLayerSelector","combinedLayerQuery","isSupportQuerySelector","combinedSupportQuery","isContainerQuerySelector","containerQuery","warnAboutUnresolvedRule"],"mappings":"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"}