{"version":3,"sources":["useTableColumnResizeMouseHandler.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { getEventClientCoords, isMouseEvent, isTouchEvent, useAnimationFrame } from '@fluentui/react-utilities';\nexport function useTableColumnResizeMouseHandler(columnResizeState) {\n    const mouseX = React.useRef(0);\n    const currentWidth = React.useRef(0);\n    const colId = React.useRef(undefined);\n    const [dragging, setDragging] = React.useState(false);\n    const { targetDocument } = useFluent();\n    const { getColumnWidth, setColumnWidth } = columnResizeState;\n    const recalculatePosition = React.useCallback((e)=>{\n        const { clientX } = getEventClientCoords(e);\n        const dx = clientX - mouseX.current;\n        // Update the local width for the column and set it\n        currentWidth.current += dx;\n        colId.current && setColumnWidth(e, {\n            columnId: colId.current,\n            width: currentWidth.current\n        });\n        mouseX.current = clientX;\n    }, [\n        setColumnWidth\n    ]);\n    const [requestRecalcFrame] = useAnimationFrame();\n    const onDrag = React.useCallback((e)=>{\n        // Using requestAnimationFrame here drastically improves resizing experience on slower CPUs\n        requestRecalcFrame(()=>recalculatePosition(e));\n    }, [\n        requestRecalcFrame,\n        recalculatePosition\n    ]);\n    const onDragEnd = React.useCallback((event)=>{\n        if (isMouseEvent(event)) {\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('mouseup', onDragEnd);\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('mousemove', onDrag);\n        }\n        if (isTouchEvent(event)) {\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('touchend', onDragEnd);\n            targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.removeEventListener('touchmove', onDrag);\n        }\n        setDragging(false);\n    }, [\n        onDrag,\n        targetDocument\n    ]);\n    const getOnMouseDown = React.useCallback((columnId)=>(event)=>{\n            // Keep the width locally so that we decouple the calculation of the next with from rendering.\n            // This makes the whole experience much faster and more precise\n            currentWidth.current = getColumnWidth(columnId);\n            mouseX.current = getEventClientCoords(event).clientX;\n            colId.current = columnId;\n            if (isMouseEvent(event)) {\n                // ignore other buttons than primary mouse button\n                if (event.target !== event.currentTarget || event.button !== 0) {\n                    return;\n                }\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('mouseup', onDragEnd);\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('mousemove', onDrag);\n                setDragging(true);\n            }\n            if (isTouchEvent(event)) {\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('touchend', onDragEnd);\n                targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.addEventListener('touchmove', onDrag);\n                setDragging(true);\n            }\n        }, [\n        getColumnWidth,\n        onDrag,\n        onDragEnd,\n        targetDocument\n    ]);\n    return {\n        getOnMouseDown,\n        dragging\n    };\n}\n"],"names":["useTableColumnResizeMouseHandler","columnResizeState","mouseX","React","useRef","currentWidth","colId","undefined","dragging","setDragging","useState","targetDocument","useFluent","getColumnWidth","setColumnWidth","recalculatePosition","useCallback","e","clientX","getEventClientCoords","dx","current","columnId","width","requestRecalcFrame","useAnimationFrame","onDrag","onDragEnd","event","isMouseEvent","removeEventListener","isTouchEvent","getOnMouseDown","target","currentTarget","button","addEventListener"],"mappings":"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"}