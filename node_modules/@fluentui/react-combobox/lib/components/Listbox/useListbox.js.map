{"version":3,"sources":["useListbox.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  getIntrinsicElementProps,\n  mergeCallbacks,\n  useEventCallback,\n  slot,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport {\n  ActiveDescendantChangeEvent,\n  useActiveDescendant,\n  useActiveDescendantContext,\n  useHasParentActiveDescendantContext,\n} from '@fluentui/react-aria';\nimport type { ListboxProps, ListboxState } from './Listbox.types';\nimport { getDropdownActionFromKey } from '../../utils/dropdownKeyActions';\nimport { useOptionCollection } from '../../utils/useOptionCollection';\nimport { useSelection } from '../../utils/useSelection';\nimport { optionClassNames } from '../Option/useOptionStyles.styles';\nimport { ListboxContext, useListboxContext_unstable } from '../../contexts/ListboxContext';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst UNSAFE_noLongerUsed = {\n  activeOption: undefined,\n  focusVisible: false,\n  setActiveOption: () => null,\n};\n\n/**\n * Create the state required to render Listbox.\n *\n * The returned state can be modified with hooks such as useListboxStyles_unstable,\n * before being passed to renderListbox_unstable.\n *\n * @param props - props from this instance of Listbox\n * @param ref - reference to root HTMLElement of Listbox\n */\nexport const useListbox_unstable = (props: ListboxProps, ref: React.Ref<HTMLElement>): ListboxState => {\n  const { multiselect } = props;\n  const optionCollection = useOptionCollection();\n  const { getOptionById } = optionCollection;\n\n  const {\n    listboxRef: activeDescendantListboxRef,\n    activeParentRef,\n    controller,\n  } = useActiveDescendant<HTMLInputElement, HTMLDivElement>({\n    matchOption: el => el.classList.contains(optionClassNames.root),\n  });\n\n  const onActiveDescendantChange = useListboxContext_unstable(ctx => ctx.onActiveDescendantChange);\n\n  const listenerRef = React.useMemo(() => {\n    let element: HTMLDivElement | null = null;\n\n    const listener = (untypedEvent: Event) => {\n      // Typescript doesn't support custom event types on handler\n      const event = untypedEvent as ActiveDescendantChangeEvent;\n      onActiveDescendantChange?.(event);\n    };\n\n    return (el: HTMLDivElement | null) => {\n      if (!el) {\n        element?.removeEventListener('activedescendantchange', listener);\n        return;\n      }\n\n      element = el;\n      element.addEventListener('activedescendantchange', listener);\n    };\n  }, [onActiveDescendantChange]);\n\n  const activeDescendantContext = useActiveDescendantContext();\n  const hasParentActiveDescendantContext = useHasParentActiveDescendantContext();\n  const activeDescendantController = hasParentActiveDescendantContext ? activeDescendantContext.controller : controller;\n\n  const { clearSelection, selectedOptions, selectOption } = useSelection(props);\n\n  const onKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    const action = getDropdownActionFromKey(event, { open: true });\n    const activeOptionId = activeDescendantController.active();\n    const activeOption = activeOptionId ? getOptionById(activeOptionId) : null;\n\n    switch (action) {\n      case 'Next':\n        if (activeOption) {\n          activeDescendantController.next();\n        } else {\n          activeDescendantController.first();\n        }\n        break;\n      case 'Previous':\n        if (activeOption) {\n          activeDescendantController.prev();\n        } else {\n          activeDescendantController.first();\n        }\n        break;\n      case 'PageUp':\n      case 'First':\n        activeDescendantController.first();\n        break;\n      case 'PageDown':\n      case 'Last':\n        activeDescendantController.last();\n        break;\n      case 'Select':\n      case 'CloseSelect':\n        activeOption && selectOption(event, activeOption);\n        break;\n    }\n  };\n\n  const onFocus = (_event: React.FocusEvent<HTMLElement>) => {\n    if (hasParentActiveDescendantContext || activeDescendantController.active()) {\n      return;\n    }\n\n    // restore focus to last active option (if it still exists) - similar to memorizeCurrent in useArrowNavigationGroup\n    if (activeDescendantController.focusLastActive()) {\n      return;\n    }\n\n    // if there is a selected option, focus it and make it active\n    const selectedOptionValues = selectedOptions ?? [];\n    const firstSelectedOption = optionCollection.getOptionsMatchingValue(value =>\n      selectedOptionValues.includes(value),\n    )[0];\n    if (firstSelectedOption) {\n      activeDescendantController.focus(firstSelectedOption.id);\n      return;\n    }\n\n    // if there is no active descendant and no selected options, set the first option as active\n    activeDescendantController.first();\n  };\n\n  const onBlur = (_event: React.FocusEvent<HTMLElement>) => {\n    if (hasParentActiveDescendantContext) {\n      return;\n    }\n\n    // blur active descendant styles on blur, in the absence of a parent context controlling the state\n    activeDescendantController.blur();\n  };\n\n  // get state from parent combobox, if it exists\n  const hasListboxContext = useHasParentContext(ListboxContext);\n  const contextSelectedOptions = useListboxContext_unstable(ctx => ctx.selectedOptions);\n  const contextSelectOption = useListboxContext_unstable(ctx => ctx.selectOption);\n\n  // without a parent combobox context, provide values directly from Listbox\n  const optionContextValues = hasListboxContext\n    ? {\n        selectedOptions: contextSelectedOptions,\n        selectOption: contextSelectOption,\n        ...UNSAFE_noLongerUsed,\n      }\n    : {\n        selectedOptions,\n        selectOption,\n        ...UNSAFE_noLongerUsed,\n      };\n\n  const state: ListboxState = {\n    components: {\n      root: 'div',\n    },\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: useMergedRefs(ref as React.Ref<HTMLDivElement>, activeParentRef, activeDescendantListboxRef, listenerRef),\n        role: multiselect ? 'menu' : 'listbox',\n        tabIndex: 0,\n        ...props,\n      }),\n      { elementType: 'div' },\n    ),\n    multiselect,\n    clearSelection,\n    activeDescendantController,\n    onActiveDescendantChange,\n    ...optionCollection,\n    ...optionContextValues,\n  };\n\n  state.root.onKeyDown = useEventCallback(mergeCallbacks(state.root.onKeyDown, onKeyDown));\n  state.root.onFocus = useEventCallback(mergeCallbacks(state.root.onFocus, onFocus));\n  state.root.onBlur = useEventCallback(mergeCallbacks(state.root.onBlur, onBlur));\n\n  return state;\n};\n"],"names":["React","getIntrinsicElementProps","mergeCallbacks","useEventCallback","slot","useMergedRefs","useHasParentContext","useActiveDescendant","useActiveDescendantContext","useHasParentActiveDescendantContext","getDropdownActionFromKey","useOptionCollection","useSelection","optionClassNames","ListboxContext","useListboxContext_unstable","UNSAFE_noLongerUsed","activeOption","undefined","focusVisible","setActiveOption","useListbox_unstable","props","ref","multiselect","optionCollection","getOptionById","listboxRef","activeDescendantListboxRef","activeParentRef","controller","matchOption","el","classList","contains","root","onActiveDescendantChange","ctx","listenerRef","useMemo","element","listener","untypedEvent","event","removeEventListener","addEventListener","activeDescendantContext","hasParentActiveDescendantContext","activeDescendantController","clearSelection","selectedOptions","selectOption","onKeyDown","action","open","activeOptionId","active","next","first","prev","last","onFocus","_event","focusLastActive","selectedOptionValues","firstSelectedOption","getOptionsMatchingValue","value","includes","focus","id","onBlur","blur","hasListboxContext","contextSelectedOptions","contextSelectOption","optionContextValues","state","components","always","role","tabIndex","elementType"],"mappings":"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"}