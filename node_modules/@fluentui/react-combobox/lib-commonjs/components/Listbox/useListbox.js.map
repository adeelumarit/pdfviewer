{"version":3,"sources":["useListbox.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, mergeCallbacks, useEventCallback, slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useHasParentContext } from '@fluentui/react-context-selector';\nimport { useActiveDescendant, useActiveDescendantContext, useHasParentActiveDescendantContext } from '@fluentui/react-aria';\nimport { getDropdownActionFromKey } from '../../utils/dropdownKeyActions';\nimport { useOptionCollection } from '../../utils/useOptionCollection';\nimport { useSelection } from '../../utils/useSelection';\nimport { optionClassNames } from '../Option/useOptionStyles.styles';\nimport { ListboxContext, useListboxContext_unstable } from '../../contexts/ListboxContext';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst UNSAFE_noLongerUsed = {\n    activeOption: undefined,\n    focusVisible: false,\n    setActiveOption: ()=>null\n};\n/**\n * Create the state required to render Listbox.\n *\n * The returned state can be modified with hooks such as useListboxStyles_unstable,\n * before being passed to renderListbox_unstable.\n *\n * @param props - props from this instance of Listbox\n * @param ref - reference to root HTMLElement of Listbox\n */ export const useListbox_unstable = (props, ref)=>{\n    const { multiselect } = props;\n    const optionCollection = useOptionCollection();\n    const { getOptionById } = optionCollection;\n    const { listboxRef: activeDescendantListboxRef, activeParentRef, controller } = useActiveDescendant({\n        matchOption: (el)=>el.classList.contains(optionClassNames.root)\n    });\n    const onActiveDescendantChange = useListboxContext_unstable((ctx)=>ctx.onActiveDescendantChange);\n    const listenerRef = React.useMemo(()=>{\n        let element = null;\n        const listener = (untypedEvent)=>{\n            // Typescript doesn't support custom event types on handler\n            const event = untypedEvent;\n            onActiveDescendantChange === null || onActiveDescendantChange === void 0 ? void 0 : onActiveDescendantChange(event);\n        };\n        return (el)=>{\n            if (!el) {\n                element === null || element === void 0 ? void 0 : element.removeEventListener('activedescendantchange', listener);\n                return;\n            }\n            element = el;\n            element.addEventListener('activedescendantchange', listener);\n        };\n    }, [\n        onActiveDescendantChange\n    ]);\n    const activeDescendantContext = useActiveDescendantContext();\n    const hasParentActiveDescendantContext = useHasParentActiveDescendantContext();\n    const activeDescendantController = hasParentActiveDescendantContext ? activeDescendantContext.controller : controller;\n    const { clearSelection, selectedOptions, selectOption } = useSelection(props);\n    const onKeyDown = (event)=>{\n        const action = getDropdownActionFromKey(event, {\n            open: true\n        });\n        const activeOptionId = activeDescendantController.active();\n        const activeOption = activeOptionId ? getOptionById(activeOptionId) : null;\n        switch(action){\n            case 'Next':\n                if (activeOption) {\n                    activeDescendantController.next();\n                } else {\n                    activeDescendantController.first();\n                }\n                break;\n            case 'Previous':\n                if (activeOption) {\n                    activeDescendantController.prev();\n                } else {\n                    activeDescendantController.first();\n                }\n                break;\n            case 'PageUp':\n            case 'First':\n                activeDescendantController.first();\n                break;\n            case 'PageDown':\n            case 'Last':\n                activeDescendantController.last();\n                break;\n            case 'Select':\n            case 'CloseSelect':\n                activeOption && selectOption(event, activeOption);\n                break;\n        }\n    };\n    const onFocus = (_event)=>{\n        if (hasParentActiveDescendantContext || activeDescendantController.active()) {\n            return;\n        }\n        // restore focus to last active option (if it still exists) - similar to memorizeCurrent in useArrowNavigationGroup\n        if (activeDescendantController.focusLastActive()) {\n            return;\n        }\n        // if there is a selected option, focus it and make it active\n        const selectedOptionValues = selectedOptions !== null && selectedOptions !== void 0 ? selectedOptions : [];\n        const firstSelectedOption = optionCollection.getOptionsMatchingValue((value)=>selectedOptionValues.includes(value))[0];\n        if (firstSelectedOption) {\n            activeDescendantController.focus(firstSelectedOption.id);\n            return;\n        }\n        // if there is no active descendant and no selected options, set the first option as active\n        activeDescendantController.first();\n    };\n    const onBlur = (_event)=>{\n        if (hasParentActiveDescendantContext) {\n            return;\n        }\n        // blur active descendant styles on blur, in the absence of a parent context controlling the state\n        activeDescendantController.blur();\n    };\n    // get state from parent combobox, if it exists\n    const hasListboxContext = useHasParentContext(ListboxContext);\n    const contextSelectedOptions = useListboxContext_unstable((ctx)=>ctx.selectedOptions);\n    const contextSelectOption = useListboxContext_unstable((ctx)=>ctx.selectOption);\n    // without a parent combobox context, provide values directly from Listbox\n    const optionContextValues = hasListboxContext ? {\n        selectedOptions: contextSelectedOptions,\n        selectOption: contextSelectOption,\n        ...UNSAFE_noLongerUsed\n    } : {\n        selectedOptions,\n        selectOption,\n        ...UNSAFE_noLongerUsed\n    };\n    const state = {\n        components: {\n            root: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: useMergedRefs(ref, activeParentRef, activeDescendantListboxRef, listenerRef),\n            role: multiselect ? 'menu' : 'listbox',\n            tabIndex: 0,\n            ...props\n        }), {\n            elementType: 'div'\n        }),\n        multiselect,\n        clearSelection,\n        activeDescendantController,\n        onActiveDescendantChange,\n        ...optionCollection,\n        ...optionContextValues\n    };\n    state.root.onKeyDown = useEventCallback(mergeCallbacks(state.root.onKeyDown, onKeyDown));\n    state.root.onFocus = useEventCallback(mergeCallbacks(state.root.onFocus, onFocus));\n    state.root.onBlur = useEventCallback(mergeCallbacks(state.root.onBlur, onBlur));\n    return state;\n};\n"],"names":["useListbox_unstable","UNSAFE_noLongerUsed","activeOption","undefined","focusVisible","setActiveOption","props","ref","multiselect","optionCollection","useOptionCollection","getOptionById","listboxRef","activeDescendantListboxRef","activeParentRef","controller","useActiveDescendant","matchOption","el","classList","contains","optionClassNames","root","onActiveDescendantChange","useListboxContext_unstable","ctx","listenerRef","React","useMemo","element","listener","untypedEvent","event","removeEventListener","addEventListener","activeDescendantContext","useActiveDescendantContext","hasParentActiveDescendantContext","useHasParentActiveDescendantContext","activeDescendantController","clearSelection","selectedOptions","selectOption","useSelection","onKeyDown","action","getDropdownActionFromKey","open","activeOptionId","active","next","first","prev","last","onFocus","_event","focusLastActive","selectedOptionValues","firstSelectedOption","getOptionsMatchingValue","value","includes","focus","id","onBlur","blur","hasListboxContext","useHasParentContext","ListboxContext","contextSelectedOptions","contextSelectOption","optionContextValues","state","components","slot","always","getIntrinsicElementProps","useMergedRefs","role","tabIndex","elementType","useEventCallback","mergeCallbacks"],"mappings":"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"}