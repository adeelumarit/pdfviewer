{"version":3,"sources":["useDialogSurface.js"],"sourcesContent":["import { Escape } from '@fluentui/keyboard-keys';\nimport { useEventCallback, useMergedRefs, isResolvedShorthand, slot, getIntrinsicElementProps, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { useDialogContext_unstable } from '../../contexts';\nimport { useDisableBodyScroll } from '../../utils/useDisableBodyScroll';\n/**\n * Create the state required to render DialogSurface.\n *\n * The returned state can be modified with hooks such as useDialogSurfaceStyles_unstable,\n * before being passed to renderDialogSurface_unstable.\n *\n * @param props - props from this instance of DialogSurface\n * @param ref - reference to root HTMLElement of DialogSurface\n */ export const useDialogSurface_unstable = (props, ref)=>{\n    const modalType = useDialogContext_unstable((ctx)=>ctx.modalType);\n    const isNestedDialog = useDialogContext_unstable((ctx)=>ctx.isNestedDialog);\n    const modalAttributes = useDialogContext_unstable((ctx)=>ctx.modalAttributes);\n    const dialogRef = useDialogContext_unstable((ctx)=>ctx.dialogRef);\n    const requestOpenChange = useDialogContext_unstable((ctx)=>ctx.requestOpenChange);\n    const dialogTitleID = useDialogContext_unstable((ctx)=>ctx.dialogTitleId);\n    const open = useDialogContext_unstable((ctx)=>ctx.open);\n    const handledBackdropClick = useEventCallback((event)=>{\n        if (isResolvedShorthand(props.backdrop)) {\n            var _props_backdrop_onClick, _props_backdrop;\n            (_props_backdrop_onClick = (_props_backdrop = props.backdrop).onClick) === null || _props_backdrop_onClick === void 0 ? void 0 : _props_backdrop_onClick.call(_props_backdrop, event);\n        }\n        if (modalType === 'modal' && !event.isDefaultPrevented()) {\n            requestOpenChange({\n                event,\n                open: false,\n                type: 'backdropClick'\n            });\n        }\n    });\n    const handleKeyDown = useEventCallback((event)=>{\n        var _props_onKeyDown;\n        (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);\n        if (event.key === Escape && !event.isDefaultPrevented()) {\n            requestOpenChange({\n                event,\n                open: false,\n                type: 'escapeKeyDown'\n            });\n            // stop propagation to avoid conflicting with other elements that listen for `Escape`\n            // e,g: nested Dialog, Popover, Menu and Tooltip\n            event.preventDefault();\n        }\n    });\n    const backdrop = slot.optional(props.backdrop, {\n        renderByDefault: modalType !== 'non-modal',\n        defaultProps: {\n            'aria-hidden': 'true'\n        },\n        elementType: 'div'\n    });\n    if (backdrop) {\n        backdrop.onClick = handledBackdropClick;\n    }\n    const { disableBodyScroll, enableBodyScroll } = useDisableBodyScroll();\n    useIsomorphicLayoutEffect(()=>{\n        if (isNestedDialog || modalType === 'non-modal') {\n            return;\n        }\n        disableBodyScroll();\n        return ()=>{\n            enableBodyScroll();\n        };\n    }, [\n        enableBodyScroll,\n        isNestedDialog,\n        disableBodyScroll,\n        modalType\n    ]);\n    return {\n        components: {\n            backdrop: 'div',\n            root: 'div'\n        },\n        open,\n        backdrop,\n        isNestedDialog,\n        mountNode: props.mountNode,\n        root: slot.always(getIntrinsicElementProps('div', {\n            tabIndex: -1,\n            'aria-modal': modalType !== 'non-modal',\n            role: modalType === 'alert' ? 'alertdialog' : 'dialog',\n            'aria-labelledby': props['aria-label'] ? undefined : dialogTitleID,\n            ...props,\n            ...modalAttributes,\n            onKeyDown: handleKeyDown,\n            // FIXME:\n            // `DialogSurfaceElement` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: useMergedRefs(ref, dialogRef)\n        }), {\n            elementType: 'div'\n        }),\n        // Deprecated properties\n        transitionStatus: undefined\n    };\n};\n"],"names":["useDialogSurface_unstable","props","ref","modalType","useDialogContext_unstable","ctx","isNestedDialog","modalAttributes","dialogRef","requestOpenChange","dialogTitleID","dialogTitleId","open","handledBackdropClick","useEventCallback","event","isResolvedShorthand","backdrop","_props_backdrop_onClick","_props_backdrop","onClick","call","isDefaultPrevented","type","handleKeyDown","_props_onKeyDown","onKeyDown","key","Escape","preventDefault","slot","optional","renderByDefault","defaultProps","elementType","disableBodyScroll","enableBodyScroll","useDisableBodyScroll","useIsomorphicLayoutEffect","components","root","mountNode","always","getIntrinsicElementProps","tabIndex","role","undefined","useMergedRefs","transitionStatus"],"mappings":"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"}