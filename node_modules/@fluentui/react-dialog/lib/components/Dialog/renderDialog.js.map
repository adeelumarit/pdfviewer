{"version":3,"sources":["renderDialog.tsx"],"sourcesContent":["/** @jsxRuntime automatic */\n/** @jsxImportSource @fluentui/react-jsx-runtime */\n\nimport * as React from 'react';\n\nimport { DialogProvider, DialogSurfaceProvider } from '../../contexts';\nimport { DialogSurfaceMotion } from '../DialogSurfaceMotion';\nimport type { DialogState, DialogContextValues } from './Dialog.types';\n\n/**\n * Render the final JSX of Dialog\n */\nexport const renderDialog_unstable = (state: DialogState, contextValues: DialogContextValues) => {\n  const { content, open, trigger } = state;\n\n  return (\n    <DialogProvider value={contextValues.dialog}>\n      <DialogSurfaceProvider value={contextValues.dialogSurface}>\n        {trigger}\n        {content && (\n          <DialogSurfaceMotion appear visible={open} unmountOnExit>\n            {/* Casting here as content should be equivalent to <DialogSurface/> */}\n            {/* FIXME: content should not be ReactNode it should be ReactElement instead. */}\n            {content as React.ReactElement}\n          </DialogSurfaceMotion>\n        )}\n      </DialogSurfaceProvider>\n    </DialogProvider>\n  );\n};\n"],"names":["React","DialogProvider","DialogSurfaceProvider","DialogSurfaceMotion","renderDialog_unstable","state","contextValues","content","open","trigger","value","dialog","dialogSurface","appear","visible","unmountOnExit"],"mappings":"AAAA,0BAA0B,GAC1B,iDAAiD;AAEjD,YAAYA,WAAW,QAAQ;AAE/B,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,iBAAiB;AACvE,SAASC,mBAAmB,QAAQ,yBAAyB;AAG7D;;CAEC,GACD,OAAO,MAAMC,wBAAwB,CAACC,OAAoBC;IACxD,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE,GAAGJ;IAEnC,qBACE,KAACJ;QAAeS,OAAOJ,cAAcK,MAAM;kBACzC,cAAA,MAACT;YAAsBQ,OAAOJ,cAAcM,aAAa;;gBACtDH;gBACAF,yBACC,KAACJ;oBAAoBU,MAAM;oBAACC,SAASN;oBAAMO,aAAa;8BAGrDR;;;;;AAMb,EAAE"}