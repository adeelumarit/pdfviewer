{"version":3,"sources":["useMountedState.js"],"sourcesContent":["import { useForceUpdate } from '@fluentui/react-utilities';\nimport * as React from 'react';\n/**\n * This hook manages the mounted state of a component, based on the \"visible\" and \"unmountOnExit\" props.\n * It simulates the behavior of getDerivedStateFromProps(), which is not available in functional components.\n */ export function useMountedState(visible = false, unmountOnExit = false) {\n    const mountedRef = React.useRef(unmountOnExit ? visible : true);\n    const forceUpdate = useForceUpdate();\n    const setMounted = React.useCallback((newValue)=>{\n        if (mountedRef.current !== newValue) {\n            mountedRef.current = newValue;\n            forceUpdate();\n        }\n    }, [\n        forceUpdate\n    ]);\n    React.useEffect(()=>{\n        if (visible) {\n            mountedRef.current = visible;\n        }\n    });\n    return [\n        visible || mountedRef.current,\n        setMounted\n    ];\n}\n"],"names":["useMountedState","visible","unmountOnExit","mountedRef","React","useRef","forceUpdate","useForceUpdate","setMounted","useCallback","newValue","current","useEffect"],"mappings":";;;;+BAKoBA;;;eAAAA;;;;gCALW;iEACR;AAIZ,SAASA,gBAAgBC,UAAU,KAAK,EAAEC,gBAAgB,KAAK;IACtE,MAAMC,aAAaC,OAAMC,MAAM,CAACH,gBAAgBD,UAAU;IAC1D,MAAMK,cAAcC,IAAAA,8BAAc;IAClC,MAAMC,aAAaJ,OAAMK,WAAW,CAAC,CAACC;QAClC,IAAIP,WAAWQ,OAAO,KAAKD,UAAU;YACjCP,WAAWQ,OAAO,GAAGD;YACrBJ;QACJ;IACJ,GAAG;QACCA;KACH;IACDF,OAAMQ,SAAS,CAAC;QACZ,IAAIX,SAAS;YACTE,WAAWQ,OAAO,GAAGV;QACzB;IACJ;IACA,OAAO;QACHA,WAAWE,WAAWQ,OAAO;QAC7BH;KACH;AACL"}