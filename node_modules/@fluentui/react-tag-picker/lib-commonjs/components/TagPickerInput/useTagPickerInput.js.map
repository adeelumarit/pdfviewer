{"version":3,"sources":["useTagPickerInput.js"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useActiveDescendantContext } from '@fluentui/react-aria';\nimport { useTagPickerContext_unstable } from '../../contexts/TagPickerContext';\nimport { useMergedRefs, getIntrinsicElementProps, useEventCallback, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport { ArrowLeft, Backspace, Enter, Space } from '@fluentui/keyboard-keys';\nimport { useInputTriggerSlot } from '@fluentui/react-combobox';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { tagPickerInputCSSRules } from '../../utils/tokens';\nimport { useFocusFinders } from '@fluentui/react-tabster';\n/**\n * Create the state required to render TagPickerInput.\n *\n * The returned state can be modified with hooks such as useTagPickerInputStyles_unstable,\n * before being passed to renderTagPickerInput_unstable.\n *\n * @param props - props from this instance of TagPickerInput\n * @param ref - reference to root HTMLDivElement of TagPickerInput\n */ export const useTagPickerInput_unstable = (props, ref)=>{\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true,\n        supportsRequired: true,\n        supportsSize: true\n    });\n    const { controller: activeDescendantController } = useActiveDescendantContext();\n    const size = useTagPickerContext_unstable((ctx)=>ctx.size);\n    const contextDisabled = useTagPickerContext_unstable((ctx)=>ctx.disabled);\n    const tagPickerGroupRef = useTagPickerContext_unstable((ctx)=>ctx.tagPickerGroupRef);\n    const triggerRef = useTagPickerContext_unstable((ctx)=>ctx.triggerRef);\n    const selectedOptions = useTagPickerContext_unstable((ctx)=>ctx.selectedOptions);\n    const setValue = useTagPickerContext_unstable((ctx)=>ctx.setValue);\n    const setOpen = useTagPickerContext_unstable((ctx)=>ctx.setOpen);\n    const setHasFocus = useTagPickerContext_unstable((ctx)=>ctx.setHasFocus);\n    const clearSelection = useTagPickerContext_unstable((ctx)=>ctx.clearSelection);\n    const open = useTagPickerContext_unstable((ctx)=>ctx.open);\n    const popoverId = useTagPickerContext_unstable((ctx)=>ctx.popoverId);\n    const selectOption = useTagPickerContext_unstable((ctx)=>ctx.selectOption);\n    const getOptionById = useTagPickerContext_unstable((ctx)=>ctx.getOptionById);\n    const contextValue = useTagPickerContext_unstable((ctx)=>ctx.value);\n    useIsomorphicLayoutEffect(()=>{\n        if (!triggerRef.current) {\n            return;\n        }\n        setTagPickerInputStretchStyle(triggerRef.current);\n    }, [\n        selectedOptions,\n        triggerRef\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        if (triggerRef.current) {\n            const input = triggerRef.current;\n            const cb = ()=>setTagPickerInputStretchStyle(input);\n            input.addEventListener('input', cb);\n            return ()=>{\n                input.removeEventListener('input', cb);\n            };\n        }\n    }, [\n        triggerRef\n    ]);\n    const { value = contextValue, disabled = contextDisabled } = props;\n    const { findLastFocusable } = useFocusFinders();\n    const isTypingRef = React.useRef(false);\n    const root = useInputTriggerSlot({\n        type: 'text',\n        value: value !== null && value !== void 0 ? value : '',\n        'aria-controls': open ? popoverId : undefined,\n        disabled,\n        ...getIntrinsicElementProps('input', props),\n        onKeyDown: useEventCallback((event)=>{\n            var _props_onKeyDown;\n            (_props_onKeyDown = props.onKeyDown) === null || _props_onKeyDown === void 0 ? void 0 : _props_onKeyDown.call(props, event);\n            if ((event.key === ArrowLeft || event.key === Backspace) && event.currentTarget.selectionStart === 0 && tagPickerGroupRef.current) {\n                var _findLastFocusable;\n                (_findLastFocusable = findLastFocusable(tagPickerGroupRef.current)) === null || _findLastFocusable === void 0 ? void 0 : _findLastFocusable.focus();\n            } else if (event.key === Space) {\n                if (open && !isTypingRef.current) {\n                    setOpen(event, false);\n                }\n            } else if (event.key === Enter) {\n                if (open) {\n                    ReactDOM.unstable_batchedUpdates(()=>{\n                        setValue(undefined);\n                        setOpen(event, false);\n                    });\n                } else {\n                    setOpen(event, true);\n                }\n            }\n            isTypingRef.current = event.key.length === 1 && event.code !== Space && !event.altKey && !event.ctrlKey && !event.metaKey;\n        })\n    }, useMergedRefs(triggerRef, ref), {\n        activeDescendantController,\n        freeform: false,\n        state: {\n            clearSelection,\n            getOptionById,\n            open,\n            selectedOptions,\n            selectOption,\n            setHasFocus,\n            setOpen,\n            setValue,\n            multiselect: true,\n            value: props.value\n        }\n    });\n    const state = {\n        components: {\n            root: 'input'\n        },\n        root,\n        disabled,\n        size\n    };\n    return state;\n};\n/**\n * while typing the user might need a bit more of space to see the text,\n * which means the input should stretch to 100% width\n * occupying a whole new line.\n *\n * This function will set the CSS variable `--width` to `100%` if the scrollWidth is greater than the offsetWidth,\n * meaning the text is overflowing the input.\n *\n * @param input - input element to apply the style\n * @returns void\n */ const setTagPickerInputStretchStyle = (input)=>{\n    // first we need to remove the CSS variable\n    // to properly calculate the difference between scrollWidth and offsetWidth\n    input.style.removeProperty(tagPickerInputCSSRules.width);\n    if (input.scrollWidth > input.offsetWidth + 1) {\n        input.style.setProperty(tagPickerInputCSSRules.width, '100%');\n    } else {\n        input.style.removeProperty(tagPickerInputCSSRules.width);\n    }\n};\n"],"names":["useTagPickerInput_unstable","props","ref","useFieldControlProps_unstable","supportsLabelFor","supportsRequired","supportsSize","controller","activeDescendantController","useActiveDescendantContext","size","useTagPickerContext_unstable","ctx","contextDisabled","disabled","tagPickerGroupRef","triggerRef","selectedOptions","setValue","setOpen","setHasFocus","clearSelection","open","popoverId","selectOption","getOptionById","contextValue","value","useIsomorphicLayoutEffect","current","setTagPickerInputStretchStyle","input","cb","addEventListener","removeEventListener","findLastFocusable","useFocusFinders","isTypingRef","React","useRef","root","useInputTriggerSlot","type","undefined","getIntrinsicElementProps","onKeyDown","useEventCallback","event","_props_onKeyDown","call","key","ArrowLeft","Backspace","currentTarget","selectionStart","_findLastFocusable","focus","Space","Enter","ReactDOM","unstable_batchedUpdates","length","code","altKey","ctrlKey","metaKey","useMergedRefs","freeform","state","multiselect","components","style","removeProperty","tagPickerInputCSSRules","width","scrollWidth","offsetWidth","setProperty"],"mappings":"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"}