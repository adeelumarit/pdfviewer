{"version":3,"sources":["OverlayDrawerSurface.js"],"sourcesContent":["import * as React from 'react';\nimport { useDialogSurface_unstable, useDialogSurfaceContextValues_unstable, renderDialogSurface_unstable } from '@fluentui/react-dialog';\nimport { useOverlayDrawerSurfaceStyles_unstable } from './useOverlayDrawerSurfaceStyles.styles';\n/**\n * @internal\n * OverlayDrawerSurface is a proxy for DialogSurface as is only meant to be used internally for Drawer.\n */ export const OverlayDrawerSurface = /*#__PURE__*/ React.forwardRef((props, ref)=>{\n    const dialogSurfaceState = useDialogSurface_unstable({\n        ...props,\n        /**\n       * Drawer accepts a `div` or `aside` element type, but Dialog only accepts a `div` element type.\n       * We need to cast the ref to a `div` element type to not break Dialog's ref type.\n       *\n       * FIXME: Evaluate the possibility to remove this cast when Dialog is refactored to accept `aside` elements.\n       */ as: props.as\n    }, ref);\n    const dialogSurfaceContextValues = useDialogSurfaceContextValues_unstable(dialogSurfaceState);\n    useOverlayDrawerSurfaceStyles_unstable(dialogSurfaceState);\n    return renderDialogSurface_unstable(dialogSurfaceState, dialogSurfaceContextValues);\n});\nOverlayDrawerSurface.displayName = 'OverlayDrawerSurface';\n"],"names":["OverlayDrawerSurface","React","forwardRef","props","ref","dialogSurfaceState","useDialogSurface_unstable","as","dialogSurfaceContextValues","useDialogSurfaceContextValues_unstable","useOverlayDrawerSurfaceStyles_unstable","renderDialogSurface_unstable","displayName"],"mappings":";;;;+BAMiBA;;;eAAAA;;;;iEANM;6BACyF;qDACzD;AAI5C,MAAMA,uBAAuB,WAAW,GAAGC,OAAMC,UAAU,CAAC,CAACC,OAAOC;IAC3E,MAAMC,qBAAqBC,IAAAA,sCAAyB,EAAC;QACjD,GAAGH,KAAK;QACR;;;;;OAKD,GAAGI,IAAIJ,MAAMI,EAAE;IAClB,GAAGH;IACH,MAAMI,6BAA6BC,IAAAA,mDAAsC,EAACJ;IAC1EK,IAAAA,2EAAsC,EAACL;IACvC,OAAOM,IAAAA,yCAA4B,EAACN,oBAAoBG;AAC5D;AACAR,qBAAqBY,WAAW,GAAG"}