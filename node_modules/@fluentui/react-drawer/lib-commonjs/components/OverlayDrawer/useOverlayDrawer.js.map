{"version":3,"sources":["useOverlayDrawer.js"],"sourcesContent":["import * as React from 'react';\nimport { slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useMotion } from '@fluentui/react-motion-preview';\nimport { useDrawerDefaultProps } from '../../shared/useDrawerDefaultProps';\nimport { OverlayDrawerDialog } from './OverlayDrawerDialog';\nimport { OverlayDrawerSurface } from './OverlayDrawerSurface';\n/**\n * Create the state required to render OverlayDrawer.\n *\n * The returned state can be modified with hooks such as useOverlayDrawerStyles_unstable,\n * before being passed to renderOverlayDrawer_unstable.\n *\n * @param props - props from this instance of OverlayDrawer\n * @param ref - reference to root HTMLElement of OverlayDrawer\n */ export const useOverlayDrawer_unstable = (props, ref)=>{\n    const { open, size, position } = useDrawerDefaultProps(props);\n    const { modalType = 'modal', inertTrapFocus, onOpenChange } = props;\n    const motion = useMotion(open);\n    const backdropProps = slot.resolveShorthand(props.backdrop);\n    const hasCustomBackdrop = modalType !== 'non-modal' && backdropProps !== null;\n    const root = slot.always({\n        ...props,\n        ref: useMergedRefs(ref, motion.ref),\n        backdrop: hasCustomBackdrop ? {\n            ...backdropProps\n        } : null\n    }, {\n        /**\n       * Drawer accepts a `div` or `aside` element type, but Dialog only accepts a `div` element type.\n       * We need to cast the ref to a `div` element type to not break Dialog's ref type.\n       */ elementType: OverlayDrawerSurface\n    });\n    const dialog = slot.always({\n        open,\n        onOpenChange,\n        inertTrapFocus,\n        modalType,\n        /**\n       * children is not needed here because we construct the children in the render function,\n       * but it's required by DialogProps\n       */ children: null\n    }, {\n        elementType: OverlayDrawerDialog\n    });\n    return {\n        components: {\n            root: OverlayDrawerSurface,\n            dialog: OverlayDrawerDialog\n        },\n        root,\n        dialog,\n        size,\n        position,\n        motion\n    };\n};\n"],"names":["useOverlayDrawer_unstable","props","ref","open","size","position","useDrawerDefaultProps","modalType","inertTrapFocus","onOpenChange","motion","useMotion","backdropProps","slot","resolveShorthand","backdrop","hasCustomBackdrop","root","always","useMergedRefs","elementType","OverlayDrawerSurface","dialog","children","OverlayDrawerDialog","components"],"mappings":";;;;+BAciBA;;;eAAAA;;;;iEAdM;gCACa;oCACV;uCACY;qCACF;sCACC;AAS1B,MAAMA,4BAA4B,CAACC,OAAOC;IACjD,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,4CAAqB,EAACL;IACvD,MAAM,EAAEM,YAAY,OAAO,EAAEC,cAAc,EAAEC,YAAY,EAAE,GAAGR;IAC9D,MAAMS,SAASC,IAAAA,6BAAS,EAACR;IACzB,MAAMS,gBAAgBC,oBAAI,CAACC,gBAAgB,CAACb,MAAMc,QAAQ;IAC1D,MAAMC,oBAAoBT,cAAc,eAAeK,kBAAkB;IACzE,MAAMK,OAAOJ,oBAAI,CAACK,MAAM,CAAC;QACrB,GAAGjB,KAAK;QACRC,KAAKiB,IAAAA,6BAAa,EAACjB,KAAKQ,OAAOR,GAAG;QAClCa,UAAUC,oBAAoB;YAC1B,GAAGJ,aAAa;QACpB,IAAI;IACR,GAAG;QACC;;;OAGD,GAAGQ,aAAaC,0CAAoB;IACvC;IACA,MAAMC,SAAST,oBAAI,CAACK,MAAM,CAAC;QACvBf;QACAM;QACAD;QACAD;QACA;;;OAGD,GAAGgB,UAAU;IAChB,GAAG;QACCH,aAAaI,wCAAmB;IACpC;IACA,OAAO;QACHC,YAAY;YACRR,MAAMI,0CAAoB;YAC1BC,QAAQE,wCAAmB;QAC/B;QACAP;QACAK;QACAlB;QACAC;QACAK;IACJ;AACJ"}