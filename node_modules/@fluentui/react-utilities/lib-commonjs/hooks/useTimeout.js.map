{"version":3,"sources":["useTimeout.js"],"sourcesContent":["import { useBrowserTimer } from './useBrowserTimer';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nconst setTimeoutNoop = (_callback)=>-1;\nconst clearTimeoutNoop = (_handle)=>undefined;\n/**\n * @internal\n * Helper to manage a browser timeout.\n * Ensures that the timeout isn't set multiple times at once and is cleaned up\n * when the component is unloaded.\n *\n * @returns A pair of [setTimeout, clearTimeout] that are stable between renders.\n */ export function useTimeout() {\n    const { targetDocument } = useFluent();\n    const win = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView;\n    const setTimerFn = win ? win.setTimeout : setTimeoutNoop;\n    const clearTimerFn = win ? win.clearTimeout : clearTimeoutNoop;\n    return useBrowserTimer(setTimerFn, clearTimerFn);\n}\n"],"names":["useTimeout","setTimeoutNoop","_callback","clearTimeoutNoop","_handle","undefined","targetDocument","useFluent","win","defaultView","setTimerFn","setTimeout","clearTimerFn","clearTimeout","useBrowserTimer"],"mappings":";;;;+BAWoBA;;;eAAAA;;;iCAXY;qCACgB;AAChD,MAAMC,iBAAiB,CAACC,YAAY,CAAC;AACrC,MAAMC,mBAAmB,CAACC,UAAUC;AAQzB,SAASL;IAChB,MAAM,EAAEM,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,MAAMC,MAAMF,mBAAmB,QAAQA,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeG,WAAW;IACtG,MAAMC,aAAaF,MAAMA,IAAIG,UAAU,GAAGV;IAC1C,MAAMW,eAAeJ,MAAMA,IAAIK,YAAY,GAAGV;IAC9C,OAAOW,IAAAA,gCAAe,EAACJ,YAAYE;AACvC"}